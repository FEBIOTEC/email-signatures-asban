#
# email-signatures-asban is a live repository that contains the necessary data and code to automate the generation of
# the email signatures from ASBAN email accounts.
#
# Copyright (C) 2024 - present @ Aleix Marin√©-Tena (github.com/AleixMT)
#
# email-signatures-asban is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.

name: buildAndSendSignatures

on:
  push:
    branches:
      - 'master'
    paths:
      - 'data/**.json'
      - 'templates/template.html'

env:
  GH_ACTIONS_ENV: true
  EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
  EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
  ACTIVITIES_NAME: ${{ secrets.ACTIVITIES_NAME }}
  ACTIVITIES_EMAIL: ${{ secrets.ACTIVITIES_EMAIL }}
  ACTIVITIES_POSITION: ${{ secrets.ACTIVITIES_POSITION }}
  ACTIVITIES_LINKEDIN: ${{ secrets.ACTIVITIES_LINKEDIN }}
  ALEIXMT_LINKEDIN: ${{ secrets.ALEIXMT_LINKEDIN }}
  ALEIXMT_POSITION: ${{ secrets.ALEIXMT_POSITION }}
  ALEIXMT_EMAIL: ${{ secrets.ALEIXMT_EMAIL }}
  ALEIXMT_NAME: ${{ secrets.ALEIXMT_NAME }}
  COMMUNICATION_POSITION: ${{ secrets.COMMUNICATION_POSITION }}
  COMMUNICATION_LINKEDIN: ${{ secrets.COMMUNICATION_LINKEDIN }}
  COMMUNICATION_EMAIL: ${{ secrets.COMMUNICATION_EMAIL }}
  COMMUNICATION_NAME: ${{ secrets.COMMUNICATION_NAME }}
  DIFFUSION_POSITION: ${{ secrets.DIFFUSION_POSITION }}
  DIFFUSION_LINKEDIN: ${{ secrets.DIFFUSION_LINKEDIN }}
  DIFFUSION_EMAIL: ${{ secrets.DIFFUSION_EMAIL }}
  DIFFUSION_NAME: ${{ secrets.DIFFUSION_NAME }}
  DIVULGATION_POSITION: ${{ secrets.DIVULGATION_POSITION }}
  DIVULGATION_LINKEDIN: ${{ secrets.DIVULGATION_LINKEDIN }}
  DIVULGATION_EMAIL: ${{ secrets.DIVULGATION_EMAIL }}
  DIVULGATION_NAME: ${{ secrets.DIVULGATION_NAME }}
  DYNAMIZATION_POSITION: ${{ secrets.DYNAMIZATION_POSITION }}
  DYNAMIZATION_LINKEDIN: ${{ secrets.DYNAMIZATION_LINKEDIN }}
  DYNAMIZATION_EMAIL: ${{ secrets.DYNAMIZATION_EMAIL }}
  DYNAMIZATION_NAME: ${{ secrets.DYNAMIZATION_NAME }}
  PRESIDENT_LINKEDIN: ${{ secrets.PRESIDENT_LINKEDIN }}
  PRESIDENT_POSITION: ${{ secrets.PRESIDENT_POSITION }}
  PRESIDENT_EMAIL: ${{ secrets.PRESIDENT_EMAIL }}
  PRESIDENT_NAME: ${{ secrets.PRESIDENT_NAME }}
  PROXY1_LINKEDIN: ${{ secrets.PROXY1_LINKEDIN }}
  PROXY1_POSITION: ${{ secrets.PROXY1_POSITION }}
  PROXY1_EMAIL: ${{ secrets.PROXY1_EMAIL }}
  PROXY1_NAME: ${{ secrets.PROXY1_NAME }}
  PROXY2_LINKEDIN: ${{ secrets.PROXY2_LINKEDIN }}
  PROXY2_POSITION: ${{ secrets.PROXY2_POSITION }}
  PROXY2_EMAIL: ${{ secrets.PROXY2_EMAIL }}
  PROXY2_NAME: ${{ secrets.PROXY2_NAME }}
  PROXY3_LINKEDIN: ${{ secrets.PROXY2_LINKEDIN }}
  PROXY3_POSITION: ${{ secrets.PROXY2_POSITION }}
  PROXY3_EMAIL: ${{ secrets.PROXY2_EMAIL }}
  PROXY3_NAME: ${{ secrets.PROXY2_NAME }}
  PROXY4_LINKEDIN: ${{ secrets.PROXY2_LINKEDIN }}
  PROXY4_POSITION: ${{ secrets.PROXY2_POSITION }}
  PROXY4_EMAIL: ${{ secrets.PROXY2_EMAIL }}
  PROXY4_NAME: ${{ secrets.PROXY2_NAME }}
  PROXY5_LINKEDIN: ${{ secrets.PROXY2_LINKEDIN }}
  PROXY5_POSITION: ${{ secrets.PROXY2_POSITION }}
  PROXY5_EMAIL: ${{ secrets.PROXY2_EMAIL }}
  PROXY5_NAME: ${{ secrets.PROXY2_NAME }}
  PROXY6_LINKEDIN: ${{ secrets.PROXY2_LINKEDIN }}
  PROXY6_POSITION: ${{ secrets.PROXY2_POSITION }}
  PROXY6_EMAIL: ${{ secrets.PROXY2_EMAIL }}
  PROXY6_NAME: ${{ secrets.PROXY2_NAME }}
  PROXY7_LINKEDIN: ${{ secrets.PROXY2_LINKEDIN }}
  PROXY7_POSITION: ${{ secrets.PROXY2_POSITION }}
  PROXY7_EMAIL: ${{ secrets.PROXY2_EMAIL }}
  PROXY7_NAME: ${{ secrets.PROXY2_NAME }}
  SECRETARY_LINKEDIN: ${{ secrets.SECRETARY_LINKEDIN }}
  SECRETARY_POSITION: ${{ secrets.SECRETARY_POSITION }}
  SECRETARY_EMAIL: ${{ secrets.SECRETARY_EMAIL }}
  SECRETARY_NAME: ${{ secrets.SECRETARY_NAME }}
  TREASURER_POSITION: ${{ secrets.TREASURER_POSITION }}
  TREASURER_LINKEDIN: ${{ secrets.TREASURER_LINKEDIN }}
  TREASURER_EMAIL: ${{ secrets.TREASURER_EMAIL }}
  TREASURER_NAME: ${{ secrets.TREASURER_NAME }}
  UNIVERSITIES_NAME: ${{ secrets.UNIVERSITIES_NAME }}
  UNIVERSITIES_EMAIL: ${{ secrets.UNIVERSITIES_EMAIL }}
  UNIVERSITIES_POSITION: ${{ secrets.UNIVERSITIES_POSITION }}
  UNIVERSITIES_LINKEDIN: ${{ secrets.UNIVERSITIES_LINKEDIN }}
  VICEPRESIDENT_LINKEDIN: ${{ secrets.VICEPRESIDENT_LINKEDIN }}
  VICEPRESIDENT_POSITION: ${{ secrets.VICEPRESIDENT_POSITION }}
  VICEPRESIDENT_EMAIL: ${{ secrets.VICEPRESIDENT_EMAIL }}
  VICEPRESIDENT_NAME: ${{ secrets.VICEPRESIDENT_NAME }}

jobs:
  build_and_send_signatures:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}
        # https://stackoverflow.com/questions/74265821/get-modified-files-in-github-actions
      - name: Get changed files
        id: changed-files
        run: |
          # Get modified files as input
          input_text=""
          if ${{ github.event_name == 'pull_request' }}; then
              input_text="$(git diff --name-only -r HEAD^1 HEAD | xargs)" 
          else
              input_text="$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)" 
          fi
          # Detect if the template has been modified 
          template_modified=false
          for file in ${input_text}; do
            if [ "templates/template.html" = "${file}" ]; then
              template_modified=true
            fi 
          done
          # Select the signatures that are going to be built
          signatures_to_build=""
          if [ "${template_modified}" = "false" ]; then   
            for file in ${input_text}; do
          echo value  $file
              if echo "${file}" | grep -q "/"; then
                if [ "$(echo "${file}" | cut -f1 -d "/")" = "data" ]; then
                  if echo "${file}" | grep -q "."; then 
                    signatures_to_build="$(echo "${file}" | cut -d "/" -f2 | cut -d "." -f1) ${signatures_to_build}"
                  fi
                fi
              fi 
            done
          else   # template_modified = true
            for file in data/*.json; do
              signatures_to_build="$(echo "${file}" | cut -d "/" -f2 | cut -d "." -f1) ${signatures_to_build}"
            done
          fi
          echo "signatures_to_build=${signatures_to_build}" 
          echo "signatures_to_build=${signatures_to_build}" >> $GITHUB_OUTPUT
      - name: List changed files
        run: |
          echo "Signatures to build:"
          for file in ${{ steps.changed-files.outputs.signatures_to_build }}; do
              echo "$file"
          done
      - name: Substitute marks (implicit parameters in env)
        run: |
          chmod u+x src/substituteMarks.sh 
          ./src/substituteMarks.sh ${{ steps.changed-files.outputs.signatures_to_build }}
      - name: Set up nodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Render signatures
        run: |
          npm install
          node ./src/renderSignatures.js
      - name: Send emails
        id: send-emails
        run: |
          chmod u+x src/sendEmails.sh 
          ./src/sendEmails.sh ${{ steps.changed-files.outputs.signatures_to_build }}
          
